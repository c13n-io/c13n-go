name: Release pipeline

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/c13n-io/c13n-go-testenv:latest
      options: -v ${{ github.workspace }}:/c13n
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install dev dependencies
        run: cd /c13n && make dev-deps

      - name: Install zip
        run: apk add --no-cache --update zip

      - name: Create release assets
        run: cd /c13n && make release

      - uses: olegtarasov/get-tag@v2.1
        id: tagName

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.tagName.outputs.tag }}
          files: |
            /c13n/c13n-build/*

  release-c13n-go-docker-image-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(?<version>.*)"

      - name: Build multiarch c13n-go:${{ steps.tagName.outputs.version }} and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./docker/c13n/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/c13n-io/c13n-go:${{ steps.tagName.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
